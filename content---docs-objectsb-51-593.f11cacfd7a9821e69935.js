(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{195:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));n(58),n(31),n(21),n(22),n(59),n(0);var r=n(217);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var o={id:"objects",title:"Objects",sidebar_label:"Objects"},c=[{value:"Getting Properties",id:"getting-properties",children:[]},{value:"Setting Properties",id:"setting-properties",children:[]},{value:"Mapping a struct to a JsObject",id:"mapping-a-struct-to-a-jsobject",children:[]}],i={rightToc:c},p="wrapper";function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(r.b)(p,a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/neon-bindings/examples/tree/master/objects"}),"Examples")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"JsObject"),"'s are used to create objects on the JS heap. ",Object(r.b)("inlineCode",{parentName:"p"},"JsObject")," structs have two methods: ",Object(r.b)("inlineCode",{parentName:"p"},"get")," and ",Object(r.b)("inlineCode",{parentName:"p"},"set"),":"),Object(r.b)("h2",{id:"getting-properties"},"Getting Properties"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},".get()")," is used to get a property of a JS object at runtime:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-rust"}),'// --snip--\nlet js_object = JsObject::new(&mut cx);\njs_object\n    .get(&mut cx, "myProperty")?\n    .downcast::<JsFunction>()\n    .or_throw(&mut cx)?;\n// --snip--\n')),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},".downcast()")," will attempt to cast the property to a ",Object(r.b)("inlineCode",{parentName:"p"},"JsFunction"),". ",Object(r.b)("inlineCode",{parentName:"p"},".or_throw()")," will error if downcasting the propety is not possible."),Object(r.b)("h2",{id:"setting-properties"},"Setting Properties"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},".set()")," requres a ",Object(r.b)("inlineCode",{parentName:"p"},"FunctionContext"),", the name of the property you want to set, and the value you want to set the property to:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-rust"}),'let js_object = JsObject::new(&mut cx);\nlet js_string = cx.string("foobar");\n\njs_object.set(&mut cx, "myProperty", js_string)?;\n')),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},".")," will attempt to cast the property to a ",Object(r.b)("inlineCode",{parentName:"p"},"JsFunction"),". ",Object(r.b)("inlineCode",{parentName:"p"},".or_throw()")," will error if downcasting the property is not possible."),Object(r.b)("h2",{id:"mapping-a-struct-to-a-jsobject"},"Mapping a ",Object(r.b)("inlineCode",{parentName:"h2"},"struct")," to a ",Object(r.b)("inlineCode",{parentName:"h2"},"JsObject")),Object(r.b)("p",null,"Here is a simple example of converting a Rust ",Object(r.b)("inlineCode",{parentName:"p"},"struct")," to a JS ",Object(r.b)("inlineCode",{parentName:"p"},"Object")," using ",Object(r.b)("inlineCode",{parentName:"p"},"JsObject"),". We first start by defining the ",Object(r.b)("inlineCode",{parentName:"p"},"struct"),":"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-rust"}),"struct Foo {\n    pub bar: u64,\n    pub baz: String\n}\n")),Object(r.b)("p",null,"And then define a function which creates an instance of the ",Object(r.b)("inlineCode",{parentName:"p"},"Foo")," struct"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-rust"}),'fn convert_struct_to_js_object(mut cx: FunctionContext) -> JsResult<JsObject> {\n    let foo = Foo {\n        bar: 1234,\n        baz: "baz".to_string()\n    };\n    let object = JsObject::new(&mut cx);\n    let js_string = cx.string(&foo.baz);\n    let js_number = cx.number(foo.bar as f64);\n    object.set(&mut cx, "myStringProperty", js_string).unwrap();\n    object.set(&mut cx, "myNumberProperty", js_number).unwrap();\n    Ok(object)\n}\n\nregister_module!(mut m, {\n    m.export_function("convertStructToJsObject", convert_struct_to_js_object)\n});\n')))}s.isMDXComponent=!0},217:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return l}));var r=n(0),a=n.n(r),o=a.a.createContext({}),c=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=c(e.components);return a.a.createElement(o.Provider,{value:t},e.children)};var p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),b=c(n),l=r,u=b[i+"."+l]||b[l]||s[l]||o;return n?a.a.createElement(u,Object.assign({},{ref:t},p,{components:n})):a.a.createElement(u,Object.assign({},{ref:t},p))}));function l(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);